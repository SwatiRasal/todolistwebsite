{"version":3,"sources":["componets/Todo.js","componets/TodoForm.js","componets/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","_ref","todos","completeTask","removeTask","map","todo","index","react_default","a","createElement","className","isComplete","key","text","id","ti_index_esm","onClick","index_esm","TodoForm","props","_useState","useState","_useState2","Object","slicedToArray","input","setInput","type","placeholder","onChange","e","target","value","name","preventDefault","addTask","Math","floor","random","TodoList","setTodos","task","newTodos","concat","toConsumableArray","updatedTasks","filter","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"mQAGe,SAASA,EAATC,GAA8C,IAA/BC,EAA+BD,EAA/BC,MAAMC,EAAyBF,EAAzBE,aAAaC,EAAYH,EAAZG,WAC7C,OAAOF,EAAMG,IAAI,SAACC,EAAKC,GAAN,OACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAKM,WAAa,oBAAqB,WAAYC,IAAKN,GACpEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaL,EAAKQ,MACjCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQE,IAAKP,EAAKS,IAC7BP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQL,UAAYL,EAAKM,WAAa,OAAO,OAAQK,QAAS,WAAOd,EAAaG,EAAKS,OACvFP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAmBP,UAAU,QAAQM,QAAS,WAAKb,EAAWE,EAAKS,WCRpE,SAASI,EAASC,GAAM,IAAAC,EAEVC,mBAAS,IAFCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE5BK,EAF4BH,EAAA,GAEpBI,EAFoBJ,EAAA,GAiBnC,OACIf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZH,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOC,YAAY,aAAaC,SAf/B,SAAAC,GACjBJ,EAASI,EAAEC,OAAOC,QAcsDtB,UAAU,aAAasB,MAAOP,EAAOQ,KAAK,SAC9G1B,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASX,QAZX,SAACc,GAChBA,EAAEI,iBACFf,EAAMgB,QAAQ,CACVrB,GAAGsB,KAAKC,MAAsB,IAAhBD,KAAKE,UACnBzB,KAAKY,EACLd,YAAW,IAEfe,EAAS,KAKwChB,UAAU,YAAvD,aCfG,SAAS6B,IAAU,IAAAnB,EAENC,mBAAS,IAFHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAExBnB,EAFwBqB,EAAA,GAEhBkB,EAFgBlB,EAAA,GA+B9B,OAAOf,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACS,EAAD,CAAUiB,QA5BA,SAAAM,GACV,GAAIA,EAAK5B,KAAT,CAGD,IAAM6B,EAAQ,CAAID,GAAJE,OAAApB,OAAAqB,EAAA,EAAArB,CAAYtB,IAC1BuC,EAASE,OAwBRnC,EAAAC,EAAAC,cAACV,EAAD,CAAME,MAAOA,EAAOC,aAfL,SAAAY,GACf,IAAI+B,EAAa5C,EAAMG,IAAI,SAAAC,GAIvB,OAHIA,EAAKS,KAAKA,IACVT,EAAKM,YAAY,GAEdN,IAGXmC,EAASK,IAOuC1C,WArBnC,SAAAW,GACb,IAAI+B,EAAatB,OAAAqB,EAAA,EAAArB,CAAItB,GAAO6C,OAAO,SAAAL,GAAI,OAAIA,EAAK3B,KAAKA,IACrD0B,EAASK,OCPFE,MATf,WACE,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAC8B,EAAD,QCKSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAArB,EAAA,GAAAsB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAApD,GAAiD,IAA9CsD,EAA8CtD,EAA9CsD,OAAQC,EAAsCvD,EAAtCuD,OAAQC,EAA8BxD,EAA9BwD,OAAQC,EAAsBzD,EAAtByD,OAAQC,EAAc1D,EAAd0D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDdU,IAASC,OACPrD,EAAAC,EAAAC,cAACF,EAAAC,EAAMqD,WAAP,KACEtD,EAAAC,EAAAC,cAACqD,EAAD,OAEFC,SAASC,eAAe,SAM1BhB","file":"static/js/main.3779e787.chunk.js","sourcesContent":["import React from 'react';\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport{TiTick} from 'react-icons/ti'\r\nexport default function Todo({todos,completeTask,removeTask}){\r\n    return todos.map((todo,index) =>(\r\n        <div className={todo.isComplete ? 'complete task-div': 'task-div'} key={index}>\r\n            <div className='todo-text'>{todo.text}</div>\r\n            <div className='icons' key={todo.id}>\r\n                <TiTick className= {todo.isComplete ? 'hide':'tick'} onClick={() => {completeTask(todo.id)}}></TiTick>\r\n                <RiCloseCircleLine className='cross' onClick={()=>{removeTask(todo.id)}}></RiCloseCircleLine>\r\n            </div>\r\n            \r\n        </div>\r\n    ))\r\n\r\n}","import React , {useState} from \"react\";\r\nexport default function TodoForm(props){\r\n    //State\r\n    const [input , setInput]=useState(\"\");\r\n\r\n    const handleChange = e =>{\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        props.addTask({\r\n            id:Math.floor(Math.random() * 1000000),\r\n            text:input,\r\n            isComplete:false\r\n        })\r\n        setInput('')\r\n    }\r\n    return(\r\n        <form className=\"todo-form\">\r\n            <input type=\"text\" placeholder=\"add a todo\" onChange={handleChange} className=\"todo-input\" value={input} name=\"text\"/>\r\n            <button type=\"submit\" onClick={handleSubmit} className=\"todo-btn\">ADD TODO</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport {useState} from 'react/cjs/react.development';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\n\r\nexport default function TodoList(){\r\n    //State array which hold all TOdOs\r\n    const[todos , setTodos]=useState([]);\r\n\r\n    const addTask=task=>{\r\n        if(!task.text){\r\n            return\r\n        }\r\n       const newTodos = [task,...todos];\r\n       setTodos(newTodos);\r\n    }\r\n    //remove todo from list\r\n    const removeTask=id =>{\r\n        let updatedTasks=[...todos].filter(task => task.id!==id)\r\n        setTodos(updatedTasks)\r\n\r\n    }\r\n    //task is completed\r\n    const completeTask=id=>{\r\n        let updatedTasks=todos.map(todo=>{\r\n            if (todo.id===id){\r\n                todo.isComplete= true;\r\n            }\r\n            return todo;\r\n        \r\n        })\r\n        setTodos(updatedTasks)\r\n    }\r\n\r\n\r\n\r\n    return <div>\r\n        <TodoForm addTask ={addTask}></TodoForm>\r\n        <Todo todos={todos} completeTask={completeTask} removeTask={removeTask}></Todo>\r\n    </div>\r\n}    ","import React from 'react';\nimport './App.css';\nimport TodoList from './componets/TodoList'\n\nfunction App() {\n  return (\n    <div className=\"Todo-list-container\">\n      <TodoList/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}